1. What is view ? -- https://www.geeksforgeeks.org/sql-views/
	- Views in SQL are kind of virtual tables. 
	- A view also has rows and columns as they are in a real table in the database. 
	- We can create a view by selecting fields from one or more tables present in the database. 
	- A View can either have all the rows of a table or specific rows based on certain condition.

	- Syntax:
		CREATE VIEW view_name AS
		SELECT column1, column2.....
		FROM table_name
		WHERE condition;
		
	- Delete view : DROP VIEW view_name;
	
	- Uses of a View :
		- A good database should contain views due to the given reasons:
		 
		- Restricting data access –
				Views provide an additional level of table security by restricting access to a predetermined set of rows and columns of a table.
		- Hiding data complexity –
				A view can hide the complexity that exists in a multiple table join.
		- Simplify commands for the user –
				Views allows the user to select information from multiple tables without requiring the users to actually know how to perform a join.
		- Store complex queries –
				Views can be used to store complex queries.
		- Rename Columns –
				Views can also be used to rename the columns without affecting the base tables provided the number of columns in view must match the number of columns specified in select statement. Thus, renaming helps to to hide the names of the columns of the base tables.
		- Multiple view facility –
				Different views can be created on the same table for different users.

2. How to faster sql query?

3. What is indexing on sql ?
	- Indexes are special lookup tables that the database search engine can use to speed up data retrieval. 
		Simply put, an index is a pointer to data in a table. 
	- An index in a database is very similar to an index in the back of a book.
	- For example, if you want to reference all pages in a book that discusses a certain topic, you first refer to the index, 
		which lists all the topics alphabetically and are then referred to one or more specific page numbers.
	- An index helps to speed up SELECT queries and WHERE clauses, but it slows down data input, with the UPDATE and the INSERT statements. 
	- Indexes can be created or dropped with no effect on the data.
	
	- Single-Column Indexes : A single-column index is created based on only one table column.
		CREATE INDEX index_name ON table_name (column_name);
		
	- Unique Indexes : Unique indexes are used not only for performance, but also for data integrity.
		A unique index does not allow any duplicate values to be inserted into the table.
		CREATE UNIQUE INDEX index_name on table_name (column_name);
		
	- Composite Indexes : A composite index is an index on two or more columns of a table
		CREATE INDEX index_name on table_name (column1, column2);
		
	- Implicit Indexes : Implicit indexes are indexes that are automatically created by the database server when an object is created.
		Indexes are automatically created for primary key constraints and unique constraints.
		
	When should indexes be avoided?
		- Indexes should not be used on small tables.
		- Tables that have frequent, large batch updates or insert operations.
		- Indexes should not be used on columns that contain a high number of NULL values.
		- Columns that are frequently manipulated should not be indexed.
		
		
		
		
		
		
		
		
		
		
		
		
		
		