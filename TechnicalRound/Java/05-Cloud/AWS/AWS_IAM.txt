## AWS Identity and Access Management ##
#IAM users
-> An IAM user is an identity within your AWS account that has specific permissions for a single person or application. 
-> Where possible, best practices recommend relying on temporary credentials instead of creating IAM users who have 
    long-term credentials such as passwords and access keys. 
-> However, if you have specific use cases that require long-term credentials with IAM users, we recommend that you rotate access keys. 
-> For more information, see Rotate access keys regularly for use cases that require long-term credentials.
-> To add IAM users to your AWS account, see Creating an IAM user in your AWS account.

#IAM user groups
->IAM group is an identity that specifies a collection of IAM users. 
->can't use a group to sign-in. 
->can use groups to specify permissions for multiple users at a time. 
->ps make permissions easier to manage for large sets of users. 
->example, you could have a group named IAMPublishers and give that group the types of permissions that publishing workloads 
 typically need.

 ===================================================================================================================================
#IAM roles
-> An IAM role is an identity within your AWS account that has specific permissions. 
-> It is similar to an IAM user, but is not associated with a specific person. 
-> You can temporarily assume an IAM role in the AWS Management Console by switching roles. 
-> You can assume a role by calling an AWS CLI or AWS API operation or by using a custom URL. 


#IAM roles with temporary credentials are used in the following situations:

1. Federated user access 
-> To assign permissions to a federated identity, you create a role and define permissions for the role. 
When a federated identity authenticates, the identity is associated with the role and is granted the permissions that are defined by 
the role. 
-> For information about roles for federation, see Creating a role for a third-party Identity Provider in the IAM User Guide. 
If you use IAM Identity Center, you configure a permission set. To control what your identities can access after they authenticate, IAM Identity Center correlates the permission set to a role in IAM. For information about permissions sets, see Permission sets in the AWS IAM Identity Center (successor to AWS Single Sign-On) User Guide.

2. Temporary IAM user permissions 
-> An IAM user or role can assume an IAM role to temporarily take on different permissions for a specific task.

3. Cross-account access 
-> You can use an IAM role to allow someone (a trusted principal) in a different account to access resources in your account. 
-> Roles are the primary way to grant cross-account access. 
-> However, with some AWS services, you can attach a policy directly to a resource (instead of using a role as a proxy). To learn the difference between roles and resource-based policies for cross-account access, see Cross account resource access in IAM.

4. Cross-service access 
-> Some AWS services use features in other AWS services. 
-> For example, when you make a call in a service, it's common for that service to run applications in Amazon EC2 or 
    store objects in Amazon S3. 
-> A service might do this using the calling principal's permissions, using a service role, or using a service-linked role.

    A. Principal permissions - When you use an IAM user or role to perform actions in AWS, you are considered a principal. Policies grant permissions to a principal. When you use some services, you might perform an action that then triggers another action in a different service. In this case, you must have permissions to perform both actions. To see whether an action requires additional dependent actions in a policy, see Actions, resources, and condition keys for AWS Identity and Access Management in the Service Authorization Reference.

    B. Service role - A service role is an IAM role that a service assumes to perform actions on your behalf. An IAM administrator can create, modify, and delete a service role from within IAM. For more information, see Creating a role to delegate permissions to an AWS service in the IAM User Guide.

    C. Service-linked role - A service-linked role is a type of service role that is linked to an AWS service. The service can assume the role to perform an action on your behalf. Service-linked roles appear in your AWS account and are owned by the service. An IAM administrator can view, but not edit the permissions for service-linked roles.

    D. Applications running on Amazon EC2 - You can use an IAM role to manage temporary credentials for applications that are running on an EC2 instance and making AWS CLI or AWS API requests. This is preferable to storing access keys within the EC2 instance. To assign an AWS role to an EC2 instance and make it available to all of its applications, you create an instance profile that is attached to the instance. An instance profile contains the role and enables programs that are running on the EC2 instance to get temporary credentials. For more information, see Using an IAM role to grant permissions to applications running on Amazon EC2 instances in the IAM User Guide.